<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zf233.xcloud.mapper.FileMapper">
    <resultMap id="BaseResultMap" type="cn.zf233.xcloud.entity.File">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="folder" jdbcType="INTEGER" property="folder"/>
        <result column="random_file_name" jdbcType="VARCHAR" property="randomFileName"/>
        <result column="old_file_name" jdbcType="VARCHAR" property="oldFileName"/>
        <result column="file_size" jdbcType="BIGINT" property="fileSize"/>
        <result column="file_type" jdbcType="VARCHAR" property="fileType"/>
        <result column="classify" jdbcType="INTEGER" property="classify"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="upload_time" jdbcType="BIGINT" property="uploadTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , user_id, parent_id, folder, random_file_name, old_file_name, file_size,
        file_type, classify, remark, upload_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_file
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByRandomFileName" parameterType="java.lang.Integer">
        delete
        from t_file
        where random_file_name = #{randomFileName}
    </delete>
    <insert id="insert" parameterType="cn.zf233.xcloud.entity.File">
        insert into t_file (id, user_id, parent_id,
        folder, random_file_name,
        old_file_name, file_size, file_type, classify,
        remark,
        upload_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
        #{folder,jdbcType=INTEGER}, #{randomFileName,jdbcType=VARCHAR},
        #{oldFileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, #{fileType,jdbcType=VARCHAR},
        #{classify,jdbcType=INTEGER},
        #{remark,jdbcType=VARCHAR},
        #{uploadTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
    </insert>
    <select id="selectRootNodeOfUserByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid} and parent_id = -1
    </select>
    <select id="selectFilesByUserIDAndParentID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid} and parent_id = #{parentid}
    </select>
    <select id="selectFilesByUserIDAndClassify" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid} and classify = #{classify} and folder = 0
    </select>
    <select id="selectFilesByUserIDAndMatchCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid} and parent_id != -1 and old_file_name like "%" #{matchcode} "%"
    </select>
    <select id="selectFilesByUserIDAndParentIDSortByTypeAsce" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid} and parent_id = #{parentid} order by ${filed}
    </select>
    <select id="selectFilesByUserIDAndParentIDSortByTypeDesc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid} and parent_id = #{parentid} order by ${filed} desc
    </select>
    <select id="selectFiles" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
    </select>
    <select id="selectFilesByUserID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_file
        where user_id = #{userid}
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="cn.zf233.xcloud.entity.File">
        update t_file
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="folder != null">
                folder = #{folder,jdbcType=INTEGER},
            </if>
            <if test="randomFileName != null">
                random_file_name = #{randomFileName},
            </if>
            <if test="oldFileName != null">
                old_file_name = #{oldFileName,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=BIGINT},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="classify != null">
                classify = #{fileType,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="uploadTime != null">
                upload_time = #{uploadTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>